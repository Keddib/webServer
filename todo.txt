We splited the work into two parts:
1 -> managing sockets: read request and parse it. sending response to client (non-blocking).
2 -> pasrsing config file and and hundling requests based on configuration & CGI.

2Part Todolist:

- [x] read config file;
	- [x] set a data structres to store virtual servers
	- [x] handle errors;
	- [x] set default dirivtives to default values if not defined on condig file
	- [x] create Servers interface that holds all valid Virtual servers
	- [x] add "return" to location and "error_page" to server
	- [x] add upload path to location

- [x] Server and Location Block Selection
	- [x] select which Server block will handle a request based
	on IP:PORT and SERVER_NAME
	- [x] select which Location block will serve a request based on path

- [] handle requests
	- [] create a Response class
	- [] handle each request and create a response object
	- [] implement a Reqhandler class that takes request and create a response
	based on configuation
	- [] if the requested resource is a CGI script just print CGI on output.
	CGI will be handled later.

- [] handle CGI
	- [] add request headers to envirment variables wih "setenv(n,v,or)"
	- [] create a new process
	- [] if method=GET add QUERY_STRING env if post open body file and dup to cgi-input
	- [] get out put and create a response




!!! headers

`Transfer-Encoding: gzip, chunked

   indicates that the payload body has been compressed using the gzip
   coding and then chunked using the chunked coding while forming the
   message body.

   A server MUST NOT send a Transfer-Encoding header field in any
   response with a status code of 1xx (Informational) or 204 (No
   Content).  A server MUST NOT send a Transfer-Encoding header field in
   any 2xx (Successful) response to a CONNECT request

   A server that receives a request message with a transfer coding it
   does not understand SHOULD respond with 501 (Not Implemented).

Content-Length: 3495`

   A server MAY send a Content-Length header field in a response to a
   HEAD request (Section 4.3.2 of [RFC7231]); a server MUST NOT send
   Content-Length in such a response unless its field-value equals the
   decimal number of octets that would have been sent in the payload
   body of a response if the same request had used the GET method.

   A server MAY send a Content-Length header field in a 304 (Not
   Modified) response to a conditional GET request (Section 4.1 of
   [RFC7232]); a server MUST NOT send Content-Length in such a response

   unless its field-value equals the decimal number of octets that would
   have been sent in the payload body of a 200 (OK) response to the same
   request.

   A server MUST NOT send a Content-Length header field in any response
   with a status code of 1xx (Informational) or 204 (No Content).  A
   server MUST NOT send a Content-Length header field in any 2xx
   (Successful) response to a CONNECT request (Section 4.3.6 of
   [RFC7231]).

   If a message is received with both a Transfer-Encoding and a
   Content-Length header field, the Transfer-Encoding overrides the
   Content-Length.  Such a message might indicate an attempt to
   perform request smuggling (Section 9.5) or response splitting
   (Section 9.4) and ought to be handled as an error.  A sender MUST
   remove the received Content-Length field prior to forwarding such
   a message downstream.