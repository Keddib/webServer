WHAT TO DO!!
// ??

we can split the tasks into to parts:
-------------------------------------
|	1 - manage connections and parse requests
	- create socket & listen for connections
	- read data and parse it
	- take response to send it

|	2 - parse config file and create response for each requeste
	- parse config file
	- take requests and create resposes
	- hundle CGI




http response supported {
	Information responses: X not supported;

	Successful responses:
	-> 200 OK : The request succeeded.
	-> 201 Created : The request succeeded, and a new resource was created as
	a result. This is typically the response sent after POST requests,
	or some PUT requests

	Redirection messages:
	-> 301 Moved Permanently : The URL of the requested resource has been
	changed permanently. The new URL is given in the response
	.
	-> 303 See other : The server sent this response to direct the client
	to get the requested resource at another URI with a GET request.

	-> 308 Permanent Redirect: This means that the resource is now permanently
	located at another URI, specified by the Location: HTTP Response header.
	This has the same semantics as the 301 Moved Permanently HTTP response code,
	with the exception that the user agent must not change the HTTP method u
	sed: if a POST was used in the first request, a POST must be used in
	the second request.

	Client error responses:
	-> 400 Bad Request : The server could not understand the request due to invalid syntax.
	-> 403 Forbidden : The client does not have access rights to the content;
	that is, it is unauthorized, so the server is refusing to give the requested
	resource. Unlike 401 Unauthorized, the client's identity is known to the server.
	-> 404 Not Found : The server can not find the requested resource.
	-> 405 Method Not Allowed : The request method is known by the server but
	is not supported by the target resource. For example,
	an API may not allow calling DELETE to remove a resource.
	-> 414 URI Too Long : The URI requested by the client is longer than the
	server is willing to interpret.

	Server error responses:
	-> 501 Not Implemented:
	The request method is not supported by the server and cannot be handled. The only methods that servers are required to support (and therefore that must not return this code) are GET and HEAD.

	-> 505 HTTP Version Not Supported : The HTTP version used in the request is not supported by the server.

	->
	->
}
